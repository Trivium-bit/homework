{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AlternativeMessage","Message","props","className","classes","message","img","src","avatar","triangle","boxMessage","name","time","messageData","HW1","background","Affair","s","tasks","nameTask","affair","priority","deleteButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","onAll","button","filter","active","onHigh","onMiddle","onLow","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","p","filterAffairs","d","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","errorInput","input","value","onChange","onKeyDown","submit","disabled","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","hw4","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.652624df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__3My2w\",\"active\":\"Affairs_active__RsPTg\",\"background\":\"Affairs_background__14J7N\",\"deleteButton\":\"Affairs_deleteButton__101H1\",\"tasks\":\"Affairs_tasks__3IGkk\",\"nameTask\":\"Affairs_nameTask__17rwi\",\"priority\":\"Affairs_priority__39EE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Message_img__1rfaB\",\"message\":\"Message_message__3MfPO\",\"name\":\"Message_name__R2g7x\",\"boxMessage\":\"Message_boxMessage__2Few-\",\"time\":\"Message_time__v6Kfy\",\"background\":\"Message_background__aCql5\",\"triangle\":\"Message_triangle__mz9Ou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Greeting_background__1gLLY\",\"greeting\":\"Greeting_greeting__3XhOH\",\"error\":\"Greeting_error__mIPeJ\",\"errorInput\":\"Greeting_errorInput__2GMcS\",\"input\":\"Greeting_input__VCKPn\",\"submit\":\"Greeting_submit__vAFrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__33pCd\",\"superInput\":\"SuperInputText_superInput__28yp5\",\"errorInput\":\"SuperInputText_errorInput__22i3v\",\"error\":\"SuperInputText_error__38-KI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw4\":\"HW4_hw4__2s-WU\",\"column\":\"HW4_column__3fIBa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__333vl\",\"red\":\"SuperButton_red__wtELd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3Wn8W\",\"checkbox\":\"SuperCheckbox_checkbox__3PKhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1dL3K\"};","import React from 'react'\n\nfunction AlternativeMessage() {\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default AlternativeMessage\n","import React from 'react'\nimport classes from './Message.module.css'\nimport {DataMessageType} from './HW1'\n\nfunction Message(props: DataMessageType) {\n    return (\n        <div className={classes.message}>\n            <img className={classes.img} src={props.avatar} />\n            <div className={classes.triangle}></div>\n         <div className={classes.boxMessage}>\n                 <div className={classes.name}>\n                {props.name}\n                </div>\n         \n            {props.message}\n            <br/>\n            <div className={classes.time}>\n            {props.time}\n            </div>\n           \n        </div>  \n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport AlternativeMessage from './AlternativeMessage';\nimport Message from './Message'\nimport classes from './Message.module.css'\n\n\nexport type DataMessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nconst messageData = {\n    avatar: 'https://www.google.com/url?sa=i&url=https%3A%2F%2Fimgbin.com%2Fpng%2FPmqdqS0W%2Fdota-2-steam-computer-icons-video-game-developer-png&psig=AOvVaw2rGsozgDS2BuGhyXAa82Hv&ust=1634990504704000&source=images&cd=vfe&ved=0CAgQjRxqFwoTCLiJgbX83fMCFQAAAAAdAAAAABAJ',\n    name: 'Vitali',\n    message: 'Hello world!',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n       \n        <div className={classes.background}>\n            <hr/>\n            homeworks 1\n            <hr/>\n            <Message avatar={messageData.avatar} name={messageData.name} message={messageData.message} time={messageData.time} />\n             <hr/>\n            {<AlternativeMessage/>}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport { AffairType } from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) }// need to fix\n\n    return (\n        <div className={s.tasks}>\n            <div className={s.nameTask}>{props.affair.name} </div>\n            <div className={s.priority}>{props.affair.priority} </div>\n            <button className={s.deleteButton} onClick={deleteCallback}>Delete</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n    }\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    const onAll = s.button + ' ' + (props.filter === 'all' ? s.active : '')\n    const onHigh = s.button + ' ' + (props.filter === 'high' ? s.active : '')\n    const onMiddle = s.button + ' ' + (props.filter === 'middle' ? s.active : '')\n    const onLow = s.button + ' ' + (props.filter === 'low' ? s.active : '')\n  \n    return (\n        <div>\n            {mappedAffairs}\n            <button onClick={setAll} className={onAll}>All</button>\n            <button onClick={setHigh} className={onHigh}>High</button>\n            <button onClick={setMiddle} className={onMiddle}>Middle</button>\n            <button onClick={setLow} className={onLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport s from './Affairs.module.css'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low' // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    /* else if (filter === 'middle') return affairs.filter(p=>p.priority === 'middle')\n    else if (filter === 'high') return affairs.filter(p=>p.priority === 'high')\n    else if (filter === 'low') return affairs.filter(p=>p.priority === 'low')\n    else {\n        return affairs\n    } */\n    else return affairs.filter(p => p.priority === filter)\n} // need to fix\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(d=>d._id !==_id) // need to fix\n} \n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div className={s.background}>\n            <hr/>\n            homeworks 2\n            <hr/>\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void// need to fix any\n    error: string// need to fix any\n    totalUsers: number // need to fix any\n    onEnter: (e: React.KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input ; // need to fix with (?:)\n\n    return (\n        <div>\n            <div>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={inputClass}\n                   onKeyDown={onEnter}\n                   //onBlur={setNameCallback} если убрать фокус с элемента, сработает setNameCallback\n                   />\n\n           \n            <button className={s.submit} onClick={addUser} disabled={!name} >add</button>\n            <span>{totalUsers}</span>\n            </div>\n            <div className={s.error}>\n            {error}\n            </div>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {KeyboardEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\"\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>): void => { // need to fix any\n        \n        const trimmedName = e.currentTarget.value.trim() // обрезание пробелов в начале, середине и в конце \n        if (trimmedName) {\n            setName(trimmedName)\n            setError('')\n        } else {\n            setName('')\n            setError('name is require')\n        }      \n        // need to fix\n    };\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name}!`);\n        setName('') //зануляем Input\n      // need to fix\n    };\n\n    const onEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) { //если есть name, только тогда срабатывает Enter\n            addUser()\n        }\n    }\n    \n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter={onEnter}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\"; \nimport s from \"./Greeting.module.css\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let user = {_id: v1(), name}\n        setUsers([...users, user]); // need to fix\n    }\n\n    return (\n        <div className={s.background}>\n            <hr/>\n            homeworks 3\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className }`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n       \n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div className={s.hw4}>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    Delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\nimport HW5 from '../../../p2-homeworks/h5/HW5'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/* <HW5/> */}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}